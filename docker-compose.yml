version: '3'

services:
  frontend:
    container_name: rw-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    command: serve -s build -l 3000
    restart: unless-stopped
    networks:
      - rw-docker-network
  mailer:
    container_name: rw-mailer
    build: ./mailer
    command: npm run start
    restart: unless-stopped
    environment:
      - PORT=3003
      - AUTH_API_URL=http://auth:3003/mailer
    networks:
      - rw-docker-network
  api:
    container_name: rw-api
    build: ./api
    command: npm run start
    restart: unless-stopped
    environment:
      - PORT=3001
      - MONGO_URL=mongodb://api_db:27017/api
      - AUTH_API_URL=http://auth:3002/api
    depends_on:
      - api_db
    networks:
      - rw-docker-network
  auth:
    build: ./auth
    container_name: rw-auth
    command: npm run start
    restart: unless-stopped
    environment:
      - PORT=3002
      - MONGO_URL=mongodb://auth_db:27017/auth
      - API_URL=http://auth:3001/api
    depends_on:
      - auth_db
    networks:
      - rw-docker-network
  api_db:
    container_name: rw-db
    image: mongo:latest
    volumes:
      - mongodb_api:/data/db
    networks:
      - rw-docker-network
  auth_db:
    container_name: rw-auth-db
    image: mongo:latest
    volumes:
      - mongodb_auth:/data/db
    networks:
      - rw-docker-network
  nginx:
    image: nginx:stable-alpine
    container_name: rw-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - api
      - auth
    networks:
      - rw-docker-network
volumes:
  mongodb_api:
  mongodb_auth:
networks:
  rw-docker-network:
    driver: bridge
